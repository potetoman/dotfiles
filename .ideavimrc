" =検索関係=
set ignorecase          " 大文字小文字を区別しない
set smartcase           " 検索文字に大文字がある場合は大文字小文字を区別
set incsearch           " インクリメンタルサーチ
set hlsearch            " 検索マッチテキストをハイライト (2013-07-03 14:30 修正）

" =編集関係=
set shiftround          " '<'や'>'でインデントする際に'shiftwidth'の倍数に丸める
set infercase           " 補完時に大文字小文字を区別しない
set virtualedit=all     " カーソルを文字が存在しない部分でも動けるようにする
set hidden              " バッファを閉じる代わりに隠す（Undo履歴を残すため）
set switchbuf=useopen   " 新しく開く代わりにすでに開いてあるバッファを開く
set showmatch           " 対応する括弧などをハイライト表示する
set matchtime=3         " 対応括弧のハイライト表示を3秒にする

"yankでクリップボードにコピー
set clipboard=unnamed,autoselect
"tabサイズを4に
set tabstop=4
set autoindent
set expandtab
set shiftwidth=4
" 対応括弧に'<'と'>'のペアを追加
set matchpairs& matchpairs+=<:>

" バックスペースでなんでも消せるようにする
set backspace=indent,eol,start

" Swapファイル？Backupファイル？前時代的すぎ
" なので全て無効化する
set nowritebackup
set nobackup
set noswapfile

"  =表示関係=
set list                " 不可視文字の可視化
set number              " 行番号の表示
syntax on               " 構文色付け
set wrap                " 長いテキストの折り返し
set textwidth=0         " 自動的に改行が入るのを無効化
set colorcolumn=80      " その代わり80文字目にラインを入れる

" 前時代的スクリーンベルを無効化
set t_vb=
set novisualbell

" Shitf hlで先端or終わり
noremap <S-h>   ^
noremap <S-l>   $

" =マクロおよびキー設定=
" 入力モード中に素早くjjと入力した場合はESCとみなす
inoremap jj <Esc>

" j, k による移動を折り返されたテキストでも自然に振る舞うように変更
nnoremap j gj
nnoremap k gk

" vを二回で行末まで選択
vnoremap v $h

" TABにて対応ペアにジャンプ
nnoremap <Tab> %
vnoremap <Tab> %

" Ctrl + hjkl でウィンドウ間を移動
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
"
" ノーマルモード時だけ ; と : を入れ替える
nnoremap ; :
nnoremap : ;

" refered IdeaVIMのキーバインドを考える 
" https://qiita.com/sei40kr/items/09e7e92eb7686f9b5950#ide%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%99

" emulate vim-srround
set surround

" Find using IDE
nnoremap / :<C-u>action Find<CR>

" code jump
nnoremap <C-o> :<C-u>action Back<CR>
nnoremap <C-i> :<C-u>action Forward<CR>
nnoremap <C-S-o> <C-o>
nnoremap <C-S-i> <C-i>

" method jump
nnoremap [m :<C-u>action MethodUp<CR>
nnoremap ]m :<C-u>action MethodDown<CR>

" jump changed
nnoremap [c :<C-u>action VcsShowPrevChangeMarker<CR>
nnoremap ]c :<C-u>action VcsShowNextChangeMarker<CR>

" jump error
nnoremap [e :<C-u>action GotoPreviousError<CR>
nnoremap ]e :<C-u>action GotoNextError<CR>

" add blank line
nnoremap [<Space> O<Esc>j
nnoremap ]<Space> o<Esc>k

" tag jump
nnoremap K :<C-u>action QuickJavaDoc<CR>
nnoremap gjK :<C-u>action GotoDeclaration<CR>
nnoremap gjk :<C-u>action GotoTypeDeclaration<CR>
nnoremap gji :<C-u>action GotoImplementation<CR>
nnoremap gjs :<C-u>action GotoSuperMethod<CR>
nnoremap gjt :<C-u>action GotoTest<CR>
nnoremap <C-k> :<C-u>action ShowUsages<CR>

" short cut
nnoremap <Space>a :<C-u>action GotoAction<CR>
nnoremap <Space>G :<C-u>action Generate<CR>
nnoremap <Space>gn :<C-u>action NewClass<CR>
nnoremap <Space>go :<C-u>action OverrideMethods<CR>
nnoremap <Space>gc :<C-u>action GenerateConstructor<CR>
nnoremap <Space>gg :<C-u>action GenerateGetter<CR>
nnoremap <Space>gs :<C-u>action GenerateSetter<CR>
nnoremap <Space>ga :<C-u>action GenerateGetterAndSetter<CR>
nnoremap <Space>ge :<C-u>action GenerateEquals<CR>
nnoremap <Space>gt :<C-u>action GenerateTestMethod<CR>
nnoremap <Space>= :<C-u>action ReformatCode<CR>
nnoremap <Space>o :<C-u>action FileStructurePopup<CR>
nnoremap <Space>q :<C-u>action CloseContent<CR>
nnoremap <Space>Q :<C-u>action ReopenClosedTab<CR>
nnoremap <Space>e :<C-u>action SearchEverywhere<CR>
nnoremap <Space>f :<C-u>action GotoFile<CR>
nnoremap <Space>F :<C-u>action FindInPath<CR>
nnoremap <Space>s :<C-u>action GotoClass<CR>
nnoremap <Space>S :<C-u>action GotoSymbol<CR>
nnoremap <Space>t :<C-u>action ActivateTerminalToolWindow<CR>
nnoremap <Space>P :<C-u>action ManageRecentProjects<CR>
nnoremap <Space>b :<C-u>action ToggleLineBreakpoint<CR>

nnoremap <Space>r :<C-u>action Run<CR>
nnoremap <Space>d :<C-u>action Debug<CR>
nnoremap <Space>d :<C-u>action RefactoringMenu<CR>


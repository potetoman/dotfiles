# lang

[[plugins]] # Html5
repo  = 'othree/html5.vim'
on_ft = 'html'

[[plugins]] # Toml
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # Markdown
repo = 'rcmdnk/vim-markdown'
on_ft = ['markdown','mkd']
hook_add = '''
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_math = 1
'''

[[plugins]] # Golang
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
    let g:go_highlight_functions = 1
    let g:go_highlight_methods = 1
    let g:go_highlight_structs = 1
    let g:syntastic_go_checkers = ['govet', 'errcheck', 'go']
    let g:go_fmt_command = "goimports"
    nnoremap <silent>,a :cclose<CR>
    autocmd FileType go nmap <silent>,b <Plug>(go-build)
    autocmd FileType go nmap <silent>,r <Plug>(go-run)
    autocmd FileType go nmap <silent>,t <Plug>(go-run)
    autocmd FileType go nmap <silent>,c <Plug>(go-coverage-toggle)
'''

[[plugins]] # Python
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
"    autocmd FileType python setlocal completeopt-=preview
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_i = 1
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = 'go'
depends = ['deoplete.nvim']
hook_add = '''
    let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
'''

# latex

[[plugins]]
repo = 'vim-latex/vim-latex'
on_ft = 'tex'
hook_add = '''
filetype plugin on
filetype indent on
set shellslash
set grepprg=grep\ -nH\ $*
let g:tex_flavor='latex'
let g:Imap_UsePlaceHolders = 1
let g:Imap_DeleteEmptyPlaceHolders = 1
let g:Imap_StickyPlaceHolders = 0
let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_MultipleCompileFormats='dvi,pdf'
"let g:Tex_FormatDependency_pdf = 'pdf'
let g:Tex_FormatDependency_pdf = 'dvi,pdf'
let g:Tex_CompileRule_pdf = 'ptex2pdf -u -l -ot "-synctex=1 -interaction=nonstopmode -file-line-error-style" $*'
"let g:Tex_CompileRule_pdf = 'lualatex -synctex=1 -interaction=nonstopmode -file-line-error-style $*'
let g:Tex_CompileRule_dvi = 'uplatex -synctex=1 -interaction=nonstopmode -file-line-error-style $*'
let g:Tex_BibtexFlavor = 'upbibtex'
let g:Tex_MakeIndexFlavor = 'upmendex $*.idx'
let g:Tex_UseEditorSettingInDVIViewer = 1
let g:Tex_ViewRule_pdf = 'PDF\ expert'
"let g:Tex_ViewRule_pdf = 'open -a Skim'
"let g:Tex_ViewRule_pdf = 'open -a Preview'
"let g:Tex_ViewRule_pdf = 'open -a TeXShop'
"let g:Tex_ViewRule_pdf = '/Applications/TeXworks.app/Contents/MacOS/TeXworks'
"let g:Tex_ViewRule_pdf = '/Applications/texstudio.app/Contents/MacOS/texstudio --pdf-viewer-only'
"let g:Tex_ViewRule_pdf = 'open -a Firefox'
"let g:Tex_ViewRule_pdf = 'open -a "Adobe Acrobat Reader DC"'
"let g:Tex_ViewRule_pdf = 'open'
let g:Tex_IgnoreLevel = 9 
let g:Tex_IgnoredWarnings = 
    \"Underfull\n".
    \"Overfull\n".
    \"specifier changed to\n".
    \"You have requested\n".
    \"Missing number, treated as zero.\n".
    \"There were undefined references\n".
    \"Citation %.%# undefined\n".
    \"LaTeX Font Warning: Font shape `%s' undefined\n".
    \"LaTeX Font Warning: Some font shapes were not available, defaults substituted."
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    nnoremap <silent>,e :NERDTreeToggle<CR>
'''

